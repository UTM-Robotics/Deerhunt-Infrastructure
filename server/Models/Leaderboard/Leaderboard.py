

class LeaderboardModel:
    def __init__(self) -> None:
        self._id = None # Bson ObjectId of leaderboard document generated by mongodb.
        self.name = "" # event name
        self.event_id = None # ObjectId of event id.
        self.teams_ids = []  # Ordered list of team ids of rank. List of ObjectIDs
    
    def set_id(self, id):
        self._id = id

    def get_id(self):
        return self._id

    def set_name(self, name):
        self.name = name

    def get_name(self):
        return self.name

    def set_event_id(self, event_id):
        self.event_id = event_id

    def get_event_id(self):
        return self.event_id

    def add_team(self, team_id):
        self.teams_ids.append(team_id)
    
    def get_teams(self):
        return self.teams_ids

    def covert_to_dict(self) -> dict:
        if self.get_id():
            return {'_id': self.get_id(),
                    'name': self.get_name(),
                    'event_id': self.get_event_id(),
                    'team_ids': self.get_teams()
                    }
        else:
            return {'name': self.get_name(),
                    'event_id': self.get_event_id(),
                    'team_ids': self.get_teams()
                    }
